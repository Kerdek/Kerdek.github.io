{
  ...sequencing,
  ...references,
  ...console_io,
  ...rng } where (

monad = __builtin_monad,

sequencing = { return, bind, yield, do, pass },

return = monad "return",
bind = monad "bind",
yield = monad "yield",
do x y = bind x (\_ -> y),
pass = return undefined,

references = { new, get, set },

new = monad "new",
get = monad "get",
set = monad "set",

console_io = { put, print, printf },

put = monad "put",
print x = put (#"to_string.cru" x),
printf s a = put (#"format.cru" s a),

rng = { random },

random = monad "random")